{"version":3,"sources":["App.styled.jsx","components/form/Form.styled.jsx","components/form/Form.jsx","components/contacts/Contacts.styled.jsx","components/contacts/Contacts.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["Container","styled","div","ListTitle","p","AddButton","button","Form","state","name","number","handleNameChange","e","setState","currentTarget","value","handleNumberChange","handleSubmit","preventDefault","props","onSubmit","disabledButton","onValidate","alert","this","onChange","type","pattern","title","required","React","Component","ContactItem","ul","DeleteButton","Contact","li","Contacts","contacts","onDeleteContact","map","contact","onClick","id","FilterTitle","Filter","App","filter","addContact","shortid","generate","prevState","handleFilterChange","getFilteredContact","normalizedFilter","toLowerCase","includes","deleteContact","contactId","validateContact","contactName","find","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d55507c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n\n  form {\n    border: 2px solid;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n  };\n\n  label {\n  color: #708090;\n  font-family: \"Times New Roman\";\n};\n\n  input {\n    display: block;\n    margin-top: 3px;\n    margin-bottom: 10px;\n  };\n`\nexport const ListTitle = styled.p`\nfont-weight: 700;\nfont-family: \"Times New Roman\"\n`\n","import styled from \"@emotion/styled\";\r\n\r\nexport const AddButton = styled.button`\r\nwidth: 85px;\r\n  display: block;\r\n  margin-top:5px;\r\n  padding: 5px;\r\n  border-radius: 4px\r\n  border: 1px\r\n\r\n  color: #708090;\r\n  font-family: \"Times New Roman\";\r\n  font-size: 14px;\r\n  box-shadow: 1px 1px 2px #000000;\r\n  cursor: pointer;\r\n`","import React from \"react\"; \r\nimport { AddButton } from \"./Form.styled\";\r\n\r\n\r\nclass Form extends React.Component {\r\n    state = {name: \"\", number:\"\"}\r\n    \r\n    handleNameChange = (e) => {\r\n        this.setState({ name: e.currentTarget.value});\r\n    }\r\n\r\n    handleNumberChange = (e) => {\r\n        this.setState({ number: e.currentTarget.value});\r\n    }\r\n\r\n     handleSubmit = (e) => {\r\n        e.preventDefault();\r\n         this.props.onSubmit(this.state);\r\n         this.setState({ name: \"\", number: \"\"});\r\n    };\r\n\r\n    disabledButton = () => {\r\n        if (!this.props.onValidate(this.state.name)) {\r\n            alert(`${this.state.name} is already in contacts`);\r\n            this.setState({ name: \"\", number: \"\"});\r\n        }  \r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} onChange={this.disabledButton}  >\r\n                <label>\r\n                    name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                        value={this.state.name}\r\n                        onChange={this.handleNameChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                        value={this.state.number}\r\n                        onChange={this.handleNumberChange}\r\n                    />\r\n                </label>\r\n                <AddButton type=\"submit\"> Add contact </AddButton>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactItem = styled.ul`\r\npadding-left: 0px;\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\nwidth: 40 px;\r\n padding: 1px;\r\n margin-left: 10px;\r\n  border-radius: 4px\r\n  border: 1px\r\n\r\n  color: #708090;\r\n  font-family: \"Times New Roman\";\r\n  font-size: 11px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const Contact = styled.li`\r\nlist-style-type: none;\r\nfont-family: \"Times New Roman\";\r\nmargin-bottom: 5px;\r\n\r\nspan+span{margin-left: 15px;}\r\n `","import React from \"react\";\r\nimport { ContactItem, DeleteButton, Contact} from \"./Contacts.styled\";\r\n\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n     return <ContactItem>\r\n          {contacts.map(contact => ( \r\n               <Contact key={contact.id}>\r\n          <span>{contact.name}:</span>\r\n          <span>{contact.number}</span>\r\n           <DeleteButton type=\"button\" onClick={()=>onDeleteContact(contact.id)}>Delete</DeleteButton>\r\n          </Contact>\r\n          ))}\r\n        </ContactItem>\r\n }\r\n\r\nexport default Contacts;","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterTitle = styled.p`\r\nfont-size: 11px;\r\nmargin: 0px;\r\n`","import React from \"react\";\r\nimport { FilterTitle } from \"./Filter.styled\"\r\n\r\nconst Filter = ({ value, onChange}) => {\r\n    return (\r\n        <div>\r\n        <FilterTitle>Find contacts by name</FilterTitle>\r\n        <input type=\"text\" value={value} onChange={onChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import { Container, ListTitle } from \"./App.styled.jsx\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Form from \"./components/form/Form.jsx\";\r\nimport Contacts from \"./components/contacts/Contacts.jsx\";\r\nimport Filter from \"./components/filter/Filter.jsx\";\r\n\r\nclass App extends React.Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    value: PropTypes.string,\r\n    onSubmit: PropTypes.func,\r\n    onValidate: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDeleteContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getFilteredContact = () => {\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    return this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  validateContact = (contactName) => {\r\n    let isDuplicate = !!this.state.contacts.find(\r\n      (contact) => contact.name === contactName\r\n    );\r\n    return !isDuplicate;\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContact();\r\n\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmit={this.addContact} onValidate={this.validateContact} />\r\n        <ListTitle>Contacts</ListTitle>\r\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\r\n        <Contacts\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}